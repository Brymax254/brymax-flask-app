"""Reinitializing migrations

Revision ID: b25be1376a23
Revises: 0951041fc915
Create Date: 2025-03-29 18:08:25.758861

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b25be1376a23'
down_revision = '0951041fc915'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('check_in',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('check_out',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('location',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('employee_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)

    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index('idx_16448_sqlite_autoindex_course_1')
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('daily_reports', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('report_date',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.alter_column('officer_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=120),
               nullable=False)
        batch_op.alter_column('farmers_registered',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('total_acres',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('tractors_in_area',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('staff_attendance',
               existing_type=sa.TEXT(),
               type_=sa.String(length=120),
               nullable=False)

    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.add_column(sa.Column('full_name', sa.String(length=100), nullable=False))
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('position',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.drop_column('name')

    with op.batch_alter_table('farmer', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('unique_number',
               existing_type=sa.TEXT(),
               type_=sa.String(length=10),
               nullable=False)
        batch_op.alter_column('full_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('county',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('subcounty',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('ward',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('location',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('phone_number',
               existing_type=sa.TEXT(),
               type_=sa.String(length=15),
               nullable=False)
        batch_op.alter_column('village',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('land_size',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('season',
               existing_type=sa.TEXT(),
               type_=sa.String(length=3),
               nullable=False)
        batch_op.alter_column('year',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('farmer_number',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('fertilizer_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.drop_index('idx_16443_sqlite_autoindex_farmer_1')
        batch_op.drop_index('idx_16443_sqlite_autoindex_farmer_2')
        batch_op.create_unique_constraint(None, ['phone_number'])
        batch_op.create_unique_constraint(None, ['unique_number'])

    with op.batch_alter_table('goal', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               nullable=False)
        batch_op.alter_column('employee_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)

    with op.batch_alter_table('harvest', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('clean_kgs',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('husk_kgs',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('date_recorded',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)

    with op.batch_alter_table('input_distribution', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('input_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('date_given',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)

    with op.batch_alter_table('manure', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('quantity',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('amount_paid',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('date_paid',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)

    with op.batch_alter_table('payroll', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('date_created',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)

    with op.batch_alter_table('pesticide', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('pesticide_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('quantity',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)

    with op.batch_alter_table('ploughing', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('date_ploughed',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)

    with op.batch_alter_table('profile', schema=None) as batch_op:
        batch_op.add_column(sa.Column('bio', sa.Text(), nullable=True))
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('employee_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.drop_column('emergency_contact')
        batch_op.drop_column('address')
        batch_op.drop_column('phone')

    with op.batch_alter_table('report', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('report_date',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.alter_column('officer_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('farmers_registered',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('total_acres',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('staff_attendance',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               nullable=False)

    with op.batch_alter_table('seed', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('seed_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('quantity',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)

    with op.batch_alter_table('updates', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('title',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               nullable=False)
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('username',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               nullable=False)
        batch_op.alter_column('role',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               nullable=False)
        batch_op.drop_index('idx_16428_sqlite_autoindex_user_1')
        batch_op.create_unique_constraint(None, ['username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('idx_16428_sqlite_autoindex_user_1', ['username'], unique=True)
        batch_op.alter_column('role',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('updates', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('seed', schema=None) as batch_op:
        batch_op.alter_column('quantity',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('seed_type',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('report', schema=None) as batch_op:
        batch_op.alter_column('staff_attendance',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('total_acres',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('farmers_registered',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('officer_name',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('report_date',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('profile', schema=None) as batch_op:
        batch_op.add_column(sa.Column('phone', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('emergency_contact', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.alter_column('employee_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_column('bio')

    with op.batch_alter_table('ploughing', schema=None) as batch_op:
        batch_op.alter_column('date_ploughed',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('pesticide', schema=None) as batch_op:
        batch_op.alter_column('quantity',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('pesticide_type',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('payroll', schema=None) as batch_op:
        batch_op.alter_column('date_created',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.alter_column('date_paid',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('amount_paid',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('manure', schema=None) as batch_op:
        batch_op.alter_column('quantity',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('input_distribution', schema=None) as batch_op:
        batch_op.alter_column('date_given',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('input_type',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('harvest', schema=None) as batch_op:
        batch_op.alter_column('date_recorded',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('husk_kgs',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('clean_kgs',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('farmer_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('goal', schema=None) as batch_op:
        batch_op.alter_column('employee_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('farmer', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('idx_16443_sqlite_autoindex_farmer_2', ['phone_number'], unique=True)
        batch_op.create_index('idx_16443_sqlite_autoindex_farmer_1', ['unique_number'], unique=True)
        batch_op.alter_column('fertilizer_type',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('farmer_number',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('year',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('season',
               existing_type=sa.String(length=3),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('land_size',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('village',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('phone_number',
               existing_type=sa.String(length=15),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('location',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('ward',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('subcounty',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('county',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('full_name',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('unique_number',
               existing_type=sa.String(length=10),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.alter_column('position',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_column('full_name')

    with op.batch_alter_table('daily_reports', schema=None) as batch_op:
        batch_op.alter_column('staff_attendance',
               existing_type=sa.String(length=120),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('tractors_in_area',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('total_acres',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('farmers_registered',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('officer_name',
               existing_type=sa.String(length=120),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('report_date',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('idx_16448_sqlite_autoindex_course_1', ['name'], unique=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.alter_column('employee_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('location',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('check_out',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('check_in',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###
